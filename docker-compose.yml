version: '3'

services:
  mysql:
    image: mysql:${MYSQL_VERSION}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ./mysql/conf/my.cnf:/etc/mysql/my.cnf:ro
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    restart: always
    networks:
      - backend

  nginx:
    image: nginx:${NGINX_VERSION}
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
    depends_on:
      - "php"
    volumes:
      - ${APP_SRC_PATH}:/usr/share/nginx/html
      - ./nginx/conf/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: always
    networks:
      - backend

  php:
    build:
      context: ./php
      args:
        - PHP_VERSION=${PHP_VERSION}
    expose:
      - "9000"
    depends_on:
      - "mysql"
    volumes:
      - ./php/conf/php.ini:/usr/local/etc/php/php.ini:ro
      - ${APP_SRC_PATH}:/var/www/html
    restart: always
    networks:
      - backend

  composer:
    build:
      context: ./composer
      args:
        - COMPOSER_VERSION=${COMPOSER_VERSION}
        - COMPOSER_REPO_PACKAGIST=${COMPOSER_REPO_PACKAGIST}
    volumes:
      - .${APP_SRC_PATH}:/app:rw
    command: composer install
    networks:
      - backend

  redis:
    image: redis:${REDIS_VERSION}
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    restart: always
    networks:
      - backend

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}

networks:
  backend:
    driver: ${NETWORKS_DRIVER}